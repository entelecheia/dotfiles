#!/bin/sh
# -e: exit on error
# -u: exit on unset variables
set -eu

log_color() {
  color_code="$1"
  shift

  printf "\033[${color_code}m%s\033[0m\n" "$*" >&2
}

log_red() {
  log_color "0;31" "$@"
}

log_blue() {
  log_color "0;34" "$@"
}

log_green() {
  log_color "1;32" "$@"
}

log_task() {
  log_blue "⏳" "$@"
}

log_info() {
  log_green "💡" "$@"
}

log_manual_action() {
  log_red "🧑‍🔧" "$@"
}

log_error() {
  log_red "🔴" "$@"
}

error() {
  log_error "$@"
  exit 1
}

# codenoid
# https://gist.github.com/codenoid/4806365032bb4ed62f381d8a76ddb8e6
log_task "Checking latest Go version...";
LATEST_GO_VERSION="$(curl --silent https://go.dev/VERSION?m=text)";
OS="$(uname)"
# lowercase
OS="$(echo "$OS" | tr '[:upper:]' '[:lower:]')"
UNAME_MACHINE="$(uname -m)"
# for linux, change x86_64 to amd64
if [ "${OS}" = "linux" ]; then
    if [ "${UNAME_MACHINE}" = "x86_64" ]; then
        UNAME_MACHINE="amd64"
    fi
fi
LATEST_GO_DOWNLOAD_URL="https://go.dev/dl/${LATEST_GO_VERSION}.${OS}-${UNAME_MACHINE}.tar.gz"

GOROOT="${HOME}/go"
GOPATH="${GOROOT}/packages"
if [ -d "${GOROOT}" ]; then
    log_info "Go is already installed in ${GOROOT}, removing it ..."
    rm -rf "${GOROOT}"
fi
log_task "Installing from ${LATEST_GO_DOWNLOAD_URL} ..."
curl --location "${LATEST_GO_DOWNLOAD_URL}" --output "${LATEST_GO_VERSION}.${OS}-${UNAME_MACHINE}.tar.gz"
tar -C "${HOME}" -xzf "${LATEST_GO_VERSION}.${OS}-${UNAME_MACHINE}.tar.gz"
rm "${LATEST_GO_VERSION}.${OS}-${UNAME_MACHINE}.tar.gz"

export GOROOT
export GOPATH
export PATH="${PATH}:${GOROOT}/bin:${GOPATH}/bin"

log_manual_action "Add Go to your PATH by adding the following line to your ~/.bashrc or ~/.zshrc:"
log_manual_action " > export GOROOT=\"${HOME}/go\""
log_manual_action " > export GOPATH=\"${GOROOT}/packages\""
log_manual_action " > export PATH=\"\${PATH}:\${GOROOT}/bin:\${GOPATH}/bin\""

log_green "✅  You are ready to Go! ✨ 🌟 ✨"
