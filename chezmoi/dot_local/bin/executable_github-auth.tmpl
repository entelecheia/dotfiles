#!/bin/bash
# {{ template "scripts-library" }}
log_task "Authenticating with GitHub"

INTERACTIVE=false
RESET=false

usage() {
  echo "Usage: $0 [-i|--interactive] [-r|--reset] [-h|--help]"
  echo
  echo "Options:"
  echo "  -i, --interactive    Enable interactive mode."
  echo "  -r, --reset          Enable reset mode."
  echo "  -h, --help           Display this help message."
  exit 1
}

while (("$#")); do
  case "$1" in
  --interactive | -i)
    INTERACTIVE=true
    shift
    ;;
  --reset | -r)
    RESET=true
    shift
    ;;
  --help | -h)
    usage
    ;;
  *)
    echo "Error: Invalid argument"
    usage
    ;;
  esac
done

GITHUB_USERNAME=${GITHUB_USERNAME:-"{{ .github.username }}"}
GITHUB_TOKEN=${GITHUB_TOKEN:-"{{ .github.token }}"}
GH_TOKEN="${GITHUB_TOKEN}"
GH_HOST_CONFIG_FILE="${HOME}/.config/gh/hosts.yml"
if [ -e "${GH_HOST_CONFIG_FILE}" ] && command -v yq >/dev/null; then
  GH_TOKEN=$(yq e '."github.com".oauth_token' "${GH_HOST_CONFIG_FILE}" || echo "")
fi
GITHUB_TOKEN="${GITHUB_TOKEN:-${GH_TOKEN}}"

if [[ -z "${GITHUB_USERNAME}" ]]; then
  log_info "GITHUB_USERNAME environment variable is not set. Skipping GitHub authentication."
  exit 0
fi
if [[ -z "${GITHUB_TOKEN}" ]] || [[ "${GITHUB_TOKEN}" == "null" ]] || [[ "${GITHUB_TOKEN}" == "NULL" ]]; then
  unset GITHUB_TOKEN
  unset GH_TOKEN
fi
if ! command -v gh >/dev/null; then
  log_info "gh is not installed. Skipping GitHub authentication."
  exit 0
fi

if [[ "${RESET}" == "true" ]]; then
  log_info "Resetting GitHub authentication"
  unset GITHUB_TOKEN
  unset GH_TOKEN
fi

c gh config set -h github.com git_protocol https
if [[ "${INTERACTIVE}" == "true" ]]; then
  log_info "Logging in to GitHub"
  log_info "If you choose to login with a web browser and the device page is not displayed, please open the following URL in your browser: "
  log_info " > https://github.com/login/device"
  c gh auth login -h github.com -s admin:public_key -s write:gpg_key -s admin:ssh_signing_key
  GH_HOST_CONFIG_FILE="${HOME}/.config/gh/hosts.yml"
  if [ -e "${GH_HOST_CONFIG_FILE}" ] && command -v yq >/dev/null; then
    GH_TOKEN=$(yq e '."github.com".oauth_token' "${GH_HOST_CONFIG_FILE}" || echo "")
  fi
  export GITHUB_TOKEN="${GITHUB_TOKEN:-${GH_TOKEN}}"
  export GH_TOKEN="${GITHUB_TOKEN}"
else
  if [[ -n "${GITHUB_TOKEN}" ]]; then
    log_info "Logging in to GitHub"
    GITHUB_TOKEN="{{ .github.token }}"
    echo "${GITHUB_TOKEN}" | gh auth login --with-token || true
  else
    log_manual_action "GITHUB_TOKEN environment variable is not set. Run this again with the --interactive flag to login to GitHub."
  fi
fi
if gh auth status &>/dev/null; then
  # setup git authentication
  c gh auth setup-git
fi
